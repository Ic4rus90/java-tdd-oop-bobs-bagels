@startuml

Class Menu {
    - menu: List<Item>
    - initializeMenu(): void
    + getItemFromMenu(name: String, variant: String): Item
}

Class Basket {
    - basketSize: Integer
    - basket: ArrayList<Item>

    + addItemToBasket(Item item): String
    + removeItemFromBasket(): String

    + basketIsFull(): Boolean
    + itemInBasket(): Boolean

    + numberOfItemsInBasket(): int
    + printBasketContent(): Void
    + calculateBasketCost(): Double
    + changeBasketSize(newSize: Integer): Boolean
}

Abstract Class Item {
    - sku: String
    - price: Double
    - name: String
    - variant: String

    + getPrice(): Double
    + getVariant(): String
}

Class Bagel Implements Item {
    - fillings: List<Filling>
    - totalPriceIncludingFillings: Double
    + addFilling(filling: Filling): String
    + getFillings(): List<Filling>
}

Class Filling Implements Item {
}

Class Coffee Implements Item {
}

Class Order {
    - basket: Basket
    + order(): String
}



@enduml

